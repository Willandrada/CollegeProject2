package View;

import Model.Cliente;
import LojaDeMoveis.Raiz;
import Controller.PedidoController;
import Controller.ClienteController;
import DAO.ClienteDAO;
import Model.Pedido;
import Model.ItemPedido;
import java.awt.Color;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class VendaCadastro extends javax.swing.JFrame {

    ItemVendaCadastro ItemVendaCadastro = null;
    //ItemVenda listaItens = new ItemVenda();
    List<ItemPedido> listaItens = new ArrayList<ItemPedido>();

    public VendaCadastro() {
        initComponents();
    }

    public void ambientarGrade() {
        DefaultTableModel model = (DefaultTableModel) tabelaItens.getModel();
        model.setRowCount(0);

        int size = listaItens.size();

        double totValor, totQt;
        totValor = totQt = 0;

        for (int i = 0; i < size; i++) {
            ItemPedido item = listaItens.get(i);

            if (item != null) {
                Object[] row = new Object[4];

                row[0] = item.getCodigoProduto();
                row[1] = item.getQuantidade();
                row[2] = item.getVlUni();
                row[3] = item.getVlTotal();

                model.addRow(row);

                totValor += item.getVlTotal();
                totQt += item.getQuantidade();
            }
        }

        this.txtQtItens.setText(Raiz.getStringEmptyDefault(String.valueOf(totQt), "0"));
        this.txtTotalItens.setText(Raiz.getStringEmptyDefault(String.valueOf(totValor), "0.0"));
        this.txtVlTotal.setText(Raiz.getStringEmptyDefault(String.valueOf(totValor), "0.0"));

        totalizar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        comboFormaPgto = new javax.swing.JComboBox<>();
        labelQuantidadeItens = new javax.swing.JLabel();
        labelFormaPgto = new javax.swing.JLabel();
        txtQtItens = new javax.swing.JTextField();
        labelObservacao = new javax.swing.JLabel();
        txtTotalItens = new javax.swing.JTextField();
        labelCliente = new javax.swing.JLabel();
        txtNomeCliente = new javax.swing.JTextField();
        buttonLocalizarCliente = new javax.swing.JButton();
        areaObservacao = new javax.swing.JScrollPane();
        txtObservacao = new javax.swing.JTextArea();
        gradeItens = new javax.swing.JScrollPane();
        tabelaItens = new javax.swing.JTable();
        buttonAddItem = new javax.swing.JButton();
        labelValorTotal = new javax.swing.JLabel();
        buttonRemoverItem = new javax.swing.JButton();
        labelDesconto = new javax.swing.JLabel();
        labelTotalItens = new javax.swing.JLabel();
        txtDesconto = new javax.swing.JFormattedTextField();
        txtCodigoCliente = new javax.swing.JFormattedTextField();
        txtVlTotal = new javax.swing.JFormattedTextField();
        cmdOk = new javax.swing.JButton();
        cmdCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Cadastrar venda");
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        comboFormaPgto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dinheiro", "Cartão", "Cheque", "Dinheiro + Cartão", "Débito", "Crédito" }));
        comboFormaPgto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboFormaPgtoActionPerformed(evt);
            }
        });

        labelQuantidadeItens.setText("Qtde. de Produtos:");

        labelFormaPgto.setText("Forma de pagamento:");

        txtQtItens.setEditable(false);
        txtQtItens.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtQtItens.setText("0");

        labelObservacao.setText("Observação da venda:");

        txtTotalItens.setEditable(false);
        txtTotalItens.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotalItens.setText("0");

        labelCliente.setText("Cliente");

        txtNomeCliente.setEditable(false);

        buttonLocalizarCliente.setText("Localizar");
        buttonLocalizarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLocalizarClienteActionPerformed(evt);
            }
        });

        txtObservacao.setColumns(20);
        txtObservacao.setLineWrap(true);
        txtObservacao.setRows(5);
        txtObservacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtObservacaoKeyPressed(evt);
            }
        });
        areaObservacao.setViewportView(txtObservacao);

        tabelaItens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Produto", "Quantidade", "Valor Unit.", "Valor Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaItens.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        gradeItens.setViewportView(tabelaItens);

        buttonAddItem.setText("Adicionar Itens");
        buttonAddItem.setActionCommand("");
        buttonAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddItemActionPerformed(evt);
            }
        });

        labelValorTotal.setText("Total da venda:");

        buttonRemoverItem.setText("Remover selecionado");
        buttonRemoverItem.setActionCommand("");
        buttonRemoverItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRemoverItemActionPerformed(evt);
            }
        });

        labelDesconto.setText("Desconto:");

        labelTotalItens.setText("Total dos itens:");

        txtDesconto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#.00"))));
        txtDesconto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDesconto.setText("0");
        txtDesconto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDescontoFocusLost(evt);
            }
        });
        txtDesconto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescontoActionPerformed(evt);
            }
        });
        txtDesconto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDescontoKeyPressed(evt);
            }
        });

        txtCodigoCliente.setBackground(Raiz.getCorObrigatorio());
        txtCodigoCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtCodigoCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodigoClienteFocusLost(evt);
            }
        });
        txtCodigoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoClienteActionPerformed(evt);
            }
        });
        txtCodigoCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodigoClienteKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCodigoClienteKeyReleased(evt);
            }
        });

        txtVlTotal.setEditable(false);
        txtVlTotal.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtVlTotal.setText("0");
        txtVlTotal.setToolTipText("");
        txtVlTotal.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gradeItens)
                    .addComponent(areaObservacao)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonLocalizarCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCodigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNomeCliente))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelDesconto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelValorTotal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtVlTotal)
                        .addGap(18, 18, 18)
                        .addComponent(buttonRemoverItem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonAddItem, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(labelFormaPgto, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboFormaPgto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelObservacao)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(labelTotalItens)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTotalItens, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16)
                                .addComponent(labelQuantidadeItens)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtQtItens, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCliente)
                    .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonLocalizarCliente)
                    .addComponent(txtCodigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelFormaPgto)
                    .addComponent(comboFormaPgto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelObservacao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(areaObservacao, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(buttonRemoverItem)
                        .addComponent(buttonAddItem))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelDesconto)
                        .addComponent(labelValorTotal)
                        .addComponent(txtDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtVlTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(gradeItens, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTotalItens)
                    .addComponent(txtTotalItens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelQuantidadeItens)
                    .addComponent(txtQtItens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(154, 154, 154))
        );

        cmdOk.setMnemonic('O');
        cmdOk.setText("OK");
        cmdOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdOkActionPerformed(evt);
            }
        });

        cmdCancelar.setMnemonic('c');
        cmdCancelar.setText("Cancelar");
        cmdCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(287, 287, 287)
                .addComponent(cmdOk, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(cmdCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(241, 241, 241))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 423, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmdCancelar)
                    .addComponent(cmdOk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmdCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelarActionPerformed
        if (Raiz.verifSaida(jPanel1)) {
            dispose();
        } else {
            return;
        }
    }//GEN-LAST:event_cmdCancelarActionPerformed

    private void buttonAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddItemActionPerformed
        ItemPedido item = new ItemPedido(true);

        if (ItemVendaCadastro == null || !ItemVendaCadastro.isDisplayable()) {
            this.ItemVendaCadastro = new ItemVendaCadastro(true, item);
        }

        ItemVendaCadastro.show();
        //ItemVendaCadastro.setVisible(true);

        //Raiz.openFrame(ItemVendaCadastro);
        if (item.getCodigoProduto() != null) {
            listaItens.add(item);
            ambientarGrade();
        }
    }//GEN-LAST:event_buttonAddItemActionPerformed

    private void buttonRemoverItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRemoverItemActionPerformed
        if (listaItens.isEmpty() || tabelaItens.getSelectedRow() < 0 || tabelaItens.getSelectedRow() > listaItens.size()) {
            return;
        }

        listaItens.remove(tabelaItens.getSelectedRow());
        ambientarGrade();
    }//GEN-LAST:event_buttonRemoverItemActionPerformed

    private void cmdOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOkActionPerformed
        if (!validarObrigatorio()) {
            return;
        }

        if (!totalizar()) {
            return;
        }

        if (listaItens.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Não é possível incluir uma venda sem itens!", "Atenção", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Pedido venda = new Pedido();

        venda.setCodigoCliente((int) Raiz.getNumber(txtCodigoCliente.getText()));
        venda.setNotasInternas(txtObservacao.getText());
        venda.setVlTotal(Raiz.getNumber(txtVlTotal.getText()));
        venda.setVlDesconto(Raiz.getNumber(txtDesconto.getText()));
        venda.setQtProdutos(txtQtItens.getText());
        venda.setFormaPagto((String) comboFormaPgto.getSelectedItem());

        SimpleDateFormat formatoBrasileiro = new SimpleDateFormat("dd/MM/yyyy");
        Date dataAtual = new Date();
        venda.setDtVenda(formatoBrasileiro.format(dataAtual));

        try {
            //ServicoVenda.cadastrarVenda(venda, listaItens);
            PedidoController.Salvar(venda, this.listaItens);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage(),
                    "Erro", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
            return;
        }

        JOptionPane.showMessageDialog(rootPane, "Venda inserida com sucesso",
                "Cadastro efetuado", JOptionPane.INFORMATION_MESSAGE);

        txtCodigoCliente.setFocusLostBehavior(0);
        txtCodigoCliente.setText("");
        txtNomeCliente.setText("");
        txtObservacao.setText("");
        txtDesconto.setText("0");
        txtVlTotal.setText("0");
        txtQtItens.setText("0");
        comboFormaPgto.setSelectedIndex(0);

        listaItens.clear();

        DefaultTableModel model = (DefaultTableModel) tabelaItens.getModel();
        model.setRowCount(0);

    }//GEN-LAST:event_cmdOkActionPerformed

    private void buttonLocalizarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLocalizarClienteActionPerformed
        BuscaCliente filtroCliente = new BuscaCliente(this);
        filtroCliente.setVisible(true);

        //Raiz.openFrame(ClienteConsulta);
    }//GEN-LAST:event_buttonLocalizarClienteActionPerformed

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        this.txtCodigoCliente.grabFocus();
    }//GEN-LAST:event_formFocusGained

    private void txtDescontoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescontoFocusLost
        if (!totalizar()) {
            txtDesconto.grabFocus();
        }
    }//GEN-LAST:event_txtDescontoFocusLost

    private void txtCodigoClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodigoClienteFocusLost
        ArrayList<Cliente> linhasClientes = ClienteDAO.getClientesPorId(Integer.parseInt(txtCodigoCliente.getText()));
        if (linhasClientes.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Cliente não cadastrado!");
            txtCodigoCliente.grabFocus();
        }

    }//GEN-LAST:event_txtCodigoClienteFocusLost

    private void txtDescontoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescontoKeyPressed
        String field = txtDesconto.getText();
        int qtCarac = field.length();

        if (qtCarac > 13) {
            field = field.substring(0, field.length() - 1);
            txtDesconto.setText(field);
        }
    }//GEN-LAST:event_txtDescontoKeyPressed

    private void txtObservacaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtObservacaoKeyPressed
        String field = txtObservacao.getText();
        int qtCarac = field.length();

        if (qtCarac > 1000) {
            field = field.substring(0, field.length() - 1);
            txtObservacao.setText(field);
        }
    }//GEN-LAST:event_txtObservacaoKeyPressed

    private void txtCodigoClienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoClienteKeyReleased
        if (txtCodigoCliente.getText().equals("")) {
            txtCodigoCliente.setFocusLostBehavior(0);
            //System.out.println(txtCodigoCliente.getFocusLostBehavior() + " - COMMIT");
        } else {
            txtCodigoCliente.setFocusLostBehavior(1);
            //System.out.println(txtCodigoCliente.getFocusLostBehavior() + " - COMMIT_OR_REVERT");
        }
    }//GEN-LAST:event_txtCodigoClienteKeyReleased

    private void txtCodigoClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoClienteKeyPressed
        String field = txtCodigoCliente.getText();
        int qtCarac = field.length();

        if (qtCarac > 10) {
            field = field.substring(0, field.length() - 1);
            txtCodigoCliente.setText(field);
        }
    }//GEN-LAST:event_txtCodigoClienteKeyPressed

    private void txtCodigoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoClienteActionPerformed

    private void comboFormaPgtoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboFormaPgtoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboFormaPgtoActionPerformed

    private void txtDescontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescontoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescontoActionPerformed

    public boolean totalizar() {
        double valorTot, valorDesc;
        String mens = "";

        txtVlTotal.setText(txtTotalItens.getText());

        valorTot = Raiz.getNumber(txtVlTotal.getText());
        valorDesc = Raiz.getNumber(txtDesconto.getText());

        if (valorTot < valorDesc) {
            mens = "O valor de desconto não pode ser maior que o total dos produtos!";
        } else if (valorDesc < 0) {
            mens = "O valor de desconto não pode ser negativo!";
        }

        if (!mens.equals("")) {
            JOptionPane.showMessageDialog(null, mens, "Atenção", JOptionPane.WARNING_MESSAGE);
            return false;
        }

        this.txtVlTotal.setText(Raiz.getStringNumber(String.valueOf(Raiz.round(valorTot - valorDesc, 2))));

        return true;
    }

    public boolean validarObrigatorio() {
        boolean retorno = true;

        if (txtCodigoCliente.getText().trim().equals("")) {
            retorno = false;
            txtCodigoCliente.grabFocus();
        }

        if (!retorno) {
            JOptionPane.showMessageDialog(null, "Campo de preenchimento obrigatório vazio!", "Atenção", JOptionPane.WARNING_MESSAGE);
        }

        return retorno;
    }

    public void setIDCliente(int id) {
        txtCodigoCliente.setValue(id);
    }

    public void setNomeCliente(String nome) {
        txtNomeCliente.setText(nome);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane areaObservacao;
    private javax.swing.JButton buttonAddItem;
    private javax.swing.JButton buttonLocalizarCliente;
    private javax.swing.JButton buttonRemoverItem;
    private javax.swing.JButton cmdCancelar;
    private javax.swing.JButton cmdOk;
    private javax.swing.JComboBox<String> comboFormaPgto;
    private javax.swing.JScrollPane gradeItens;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelCliente;
    private javax.swing.JLabel labelDesconto;
    private javax.swing.JLabel labelFormaPgto;
    private javax.swing.JLabel labelObservacao;
    private javax.swing.JLabel labelQuantidadeItens;
    private javax.swing.JLabel labelTotalItens;
    private javax.swing.JLabel labelValorTotal;
    private javax.swing.JTable tabelaItens;
    private javax.swing.JFormattedTextField txtCodigoCliente;
    private javax.swing.JFormattedTextField txtDesconto;
    private javax.swing.JTextField txtNomeCliente;
    private javax.swing.JTextArea txtObservacao;
    private javax.swing.JTextField txtQtItens;
    private javax.swing.JTextField txtTotalItens;
    private javax.swing.JFormattedTextField txtVlTotal;
    // End of variables declaration//GEN-END:variables
}
